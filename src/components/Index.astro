---
import { getCollection, type CollectionEntry } from "astro:content";
import { LinkCard, CardGrid } from "@astrojs/starlight/components";

interface FilterDataStructure {
  filterBy: "data structure";
  filterValue: "hash table" | "two pointers" | "stack";
}

interface FilterDifficulty {
  filterBy: "difficulty";
  filterValue: "easy" | "medium" | "hard";
}

type Props = FilterDataStructure | FilterDifficulty;

const { filterBy, filterValue } = Astro.props;

const filterCallback = ({
  filterBy,
  filterValue,
}: FilterDataStructure | FilterDifficulty) => {
  switch (filterBy) {
    case "data structure":
      return (doc: CollectionEntry<"docs">) =>
        doc.data.dataStructures?.includes(filterValue);
    case "difficulty":
      return (doc: CollectionEntry<"docs">) =>
        doc.data.difficulty === filterValue;
    default:
      return undefined;
  }
};

const docs = await getCollection(
  "docs",
  filterCallback({ filterBy, filterValue } as
    | FilterDataStructure
    | FilterDifficulty),
);
---

<ul></ul>
<CardGrid>
  {docs.map((doc) => <LinkCard title={doc.data.title} href={"/" + doc.slug} />)}
</CardGrid>
